#!/usr/bin/env python3
import os
import sys
from PIL import Image


def compress_image(image_path, output_path, quality=70):
    print(f"Сжатие изображения: {image_path.split('/')[-1]}")
    with Image.open(image_path) as img:
        img = img.convert("RGB")

        img.save(output_path, "JPEG", quality=quality)


def create_dir_if_not_exists(directory):
    if not os.path.exists(directory):
        print(f"Создание папки {output_directory}")
        os.makedirs(directory)


def main(input_directory, output_directory=None, quality=None):
    if not output_directory:
        output_directory = input_directory

    if not quality:
        quality = 70

    create_dir_if_not_exists(output_directory)

    input_directory, output_directory = os.path.abspath(input_directory), os.path.abspath(output_directory)
    print(f"Исходная папка: {input_directory}")
    print(f"Результирующая папка: {output_directory}")

    for root, _, files in os.walk(input_directory):
        # Skipping subdirectories
        if root != input_directory:
            continue

        for file in files:
            if file.lower().endswith(('.png', '.jpg', '.jpeg')):
                input_image_path = os.path.join(root, file)
                output_image_path = os.path.join(output_directory, file)

                compress_image(input_image_path, output_image_path, quality)


if __name__ == "__main__":
    if len(sys.argv) < 2 or len(sys.argv) > 3:
        print("Использование: image-compressor <путь_к_папке> <путь_к_результатам> <степень_сжатия>")
        sys.exit(1)
    elif len(sys.argv) == 4:
        input_directory, output_directory, quality = sys.argv[1], sys.argv[2], int(sys.argv[3])
    elif len(sys.argv) == 3:
        input_directory, output_directory, quality = sys.argv[1], sys.argv[2], None
    else:
        input_directory, output_directory, quality = sys.argv[1], None, None
    
    main(input_directory, output_directory, quality)

